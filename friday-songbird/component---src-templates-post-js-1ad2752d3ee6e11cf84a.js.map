{"version":3,"sources":["webpack://friday-songbird/./src/templates/post.js"],"names":["nextLink","prevLink","data","pageContext","post","title","titulo","artista","nextPost","className","to","slug","fecha_publicacion","prevPost","site","siteMetadata","href","spotify_uri","src","width","height","frameBorder","allowTransparency","allow","youtube_url","allowFullScreen","album","id","dangerouslySetInnerHTML","__html","contenidoHTML"],"mappings":"0KAiEA,UA5DiB,SAAC,GAAyB,IAMnCA,EAAUC,EANCC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,YACjBC,EAAOF,EAAKE,KACZC,EAAQD,EAAKE,OAyBjB,OAxBIF,EAAKG,UACLF,EAAQD,EAAKG,QAAU,MAAQF,GAI/BL,EADAG,EAAYK,SAET,gBAAC,KAAD,CAAMC,UAAU,wBAAwBC,GAAIP,EAAYK,SAASG,MAAOR,EAAYK,SAASI,kBAA7F,MAAmHT,EAAYK,SAASF,OAAxI,MAKC,wBAAMG,UAAU,yBAAhB,KAIJR,EADAE,EAAYU,SAET,gBAAC,KAAD,CAAMJ,UAAU,wBAAwBC,GAAIP,EAAYU,SAASF,MAAjE,KAA+ER,EAAYU,SAASD,kBAApG,MAA0HT,EAAYU,SAASP,QAK9I,wBAAMG,UAAU,yBAAhB,KAIJ,gBAAC,IAAD,KACE,2BACE,gBAAC,IAAD,CAAQJ,MAAOA,EAAM,MAAMH,EAAKY,KAAKC,aAAaV,QAClD,uBAAKI,UAAU,SACb,uBAAKA,UAAU,QACb,sBAAIA,UAAU,cAAa,qBAAGO,KAAK,KAAKX,IACxC,wBAAMI,UAAU,aAAaL,EAAKQ,mBACjCR,EAAKa,aACN,yBACE,0BAAQZ,MAAM,iBAAiBa,IAAK,sCAAsCd,EAAKa,YAAaE,MAAM,MAAMC,OAAO,KAAKC,YAAY,IAAIC,kBAAkB,OAAOC,MAAM,qBAGpKnB,EAAKoB,aACN,qBAAGf,UAAU,mBACX,0BAAQJ,MAAM,iBAAiBc,MAAM,MAAMC,OAAO,MAAMF,IAAKd,EAAKoB,YAAaH,YAAY,IAAIE,MAAM,0EAA0EE,iBAAe,KAG/LrB,EAAKsB,OACN,mCAAWtB,EAAKsB,OAEhB,uBAAKC,GAAG,eAAeC,wBAAyB,CAACC,OAAQzB,EAAK0B,mBAGlE,uBAAKrB,UAAU,cACZR,EACAD","file":"component---src-templates-post-js-1ad2752d3ee6e11cf84a.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\nimport Layout from '../components/layout'\n\nconst PostPage = ({data, pageContext}) => {\n    var post = data.post;\n    var title = post.titulo;\n    if (post.artista) {\n        title = post.artista + \" - \" + title;\n    }\n    var nextLink, prevLink;\n    if (pageContext.nextPost) {\n        nextLink = (\n           <Link className=\"pagination-item newer\" to={pageContext.nextPost.slug}>{pageContext.nextPost.fecha_publicacion} - {pageContext.nextPost.titulo} &rarr;</Link>\n        );\n    }\n    else {\n        nextLink = (\n            <span className=\"pagination-item newer\">&rarr;</span>\n        );\n    }\n    if (pageContext.prevPost) {\n        prevLink = (\n           <Link className=\"pagination-item older\" to={pageContext.prevPost.slug}>&larr; {pageContext.prevPost.fecha_publicacion} - {pageContext.prevPost.titulo}</Link>\n        );\n    }\n    else {\n        prevLink = (\n            <span className=\"pagination-item older\">&larr;</span>\n        );\n    }\n    return (\n        <Layout>\n          <div>\n            <Helmet title={title+' - '+data.site.siteMetadata.title} />\n            <div className=\"posts\">\n              <div className=\"post\">\n                <h1 className=\"post-title\"><a href=\"#\">{title}</a></h1>\n                <span className=\"post-date\">{post.fecha_publicacion}</span>\n                {post.spotify_uri && (\n                <p>\n                  <iframe title=\"Spotify player\" src={\"https://open.spotify.com/embed?uri=\"+post.spotify_uri} width=\"300\" height=\"80\" frameBorder=\"0\" allowTransparency=\"true\" allow=\"encrypted-media\"></iframe>\n                </p>\n                )}\n                {post.youtube_url && (\n                <p className=\"video-container\">\n                  <iframe title=\"YouTube player\" width=\"560\" height=\"315\" src={post.youtube_url} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                </p>\n                )}\n                {post.album && (\n                <p>Album: {post.album}</p>\n                )}\n                <div id=\"post_content\" dangerouslySetInnerHTML={{__html: post.contenidoHTML}} />\n              </div>\n            </div>\n            <div className=\"pagination\">\n              {prevLink}\n              {nextLink}\n            </div>\n          </div>\n        </Layout>\n    );\n}\n\nexport default PostPage;\n\nexport const query = graphql`\nquery postQuery($id: String!) {\n  post(id: {eq: $id}) {\n    album\n    artista\n    titulo\n    contenidoHTML\n    fecha_publicacion(formatString:\"DD MMMM YYYY\")\n    spotify_uri\n    youtube_url\n  }\n  site {\n    siteMetadata {\n      title\n    }\n  }\n}`\n"],"sourceRoot":""}