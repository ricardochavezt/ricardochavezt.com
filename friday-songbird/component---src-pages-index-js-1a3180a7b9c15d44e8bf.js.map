{"version":3,"sources":["webpack://friday-songbird/./src/pages/index.js"],"names":["nextLink","prevLink","data","post","allPost","edges","node","title","titulo","artista","next","className","to","slug","fecha_publicacion","previous","href","spotify_uri","src","width","height","frameBorder","allowTransparency","allow","youtube_url","allowFullScreen","album","id","dangerouslySetInnerHTML","__html","contenidoHTML"],"mappings":"gKA+DA,UA3DkB,SAAC,GAAY,IAMvBA,EAAUC,EANEC,EAAU,EAAVA,KACZC,EAAOD,EAAKE,QAAQC,MAAM,GAAGC,KAC7BC,EAAQJ,EAAKK,OAyBjB,OAxBIL,EAAKM,UACLF,EAAQJ,EAAKM,QAAU,MAAQF,GAI/BP,EADAE,EAAKE,QAAQC,MAAM,GAAGK,KAEnB,gBAAC,KAAD,CAAMC,UAAU,wBAAwBC,GAAIV,EAAKE,QAAQC,MAAM,GAAGK,KAAKG,MAAOX,EAAKE,QAAQC,MAAM,GAAGK,KAAKI,kBAAzG,MAA+HZ,EAAKE,QAAQC,MAAM,GAAGK,KAAKF,OAA1J,MAKC,wBAAMG,UAAU,yBAAhB,KAIJV,EADAC,EAAKE,QAAQC,MAAM,GAAGU,SAEnB,gBAAC,KAAD,CAAMJ,UAAU,wBAAwBC,GAAIV,EAAKE,QAAQC,MAAM,GAAGU,SAASF,MAA3E,KAAyFX,EAAKE,QAAQC,MAAM,GAAGU,SAASD,kBAAxH,MAA8IZ,EAAKE,QAAQC,MAAM,GAAGU,SAASP,QAK5K,wBAAMG,UAAU,yBAAhB,KAIJ,gBAAC,IAAD,KACE,2BACE,uBAAKA,UAAU,SACb,uBAAKA,UAAU,QACb,sBAAIA,UAAU,cAAa,qBAAGK,KAAK,KAAKT,IACxC,wBAAMI,UAAU,aAAaR,EAAKW,mBACjCX,EAAKc,aACN,yBACI,0BAAQV,MAAM,iBAAiBW,IAAK,sCAAsCf,EAAKc,YAAaE,MAAM,MAAMC,OAAO,KAAKC,YAAY,IAAIC,kBAAkB,OAAOC,MAAM,qBAGtKpB,EAAKqB,aACN,qBAAGb,UAAU,mBACT,0BAAQJ,MAAM,iBAAiBY,MAAM,MAAMC,OAAO,MAAMF,IAAKf,EAAKqB,YAAaH,YAAY,IAAIE,MAAM,0EAA0EE,iBAAe,KAGjMtB,EAAKuB,OACN,mCAAWvB,EAAKuB,OAEhB,uBAAKC,GAAG,eAAeC,wBAAyB,CAACC,OAAQ1B,EAAK2B,mBAGlE,uBAAKnB,UAAU,cACZV,EACAD","file":"component---src-pages-index-js-1a3180a7b9c15d44e8bf.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/layout'\n\nconst IndexPage = ({data}) => {\n    var post = data.allPost.edges[0].node;\n    var title = post.titulo;\n    if (post.artista) {\n        title = post.artista + \" - \" + title;\n    }\n    var nextLink, prevLink;\n    if (data.allPost.edges[0].next) {\n        nextLink = (\n           <Link className=\"pagination-item newer\" to={data.allPost.edges[0].next.slug}>{data.allPost.edges[0].next.fecha_publicacion} - {data.allPost.edges[0].next.titulo} &rarr;</Link>\n        );\n    }\n    else {\n        nextLink = (\n            <span className=\"pagination-item newer\">&rarr;</span>\n        );\n    }\n    if (data.allPost.edges[0].previous) {\n        prevLink = (\n           <Link className=\"pagination-item older\" to={data.allPost.edges[0].previous.slug}>&larr; {data.allPost.edges[0].previous.fecha_publicacion} - {data.allPost.edges[0].previous.titulo}</Link>\n        );\n    }\n    else {\n        prevLink = (\n            <span className=\"pagination-item older\">&larr;</span>\n        );\n    }\n    return (\n        <Layout>\n          <div>\n            <div className=\"posts\">\n              <div className=\"post\">\n                <h1 className=\"post-title\"><a href=\"#\">{title}</a></h1>\n                <span className=\"post-date\">{post.fecha_publicacion}</span>\n                {post.spotify_uri && (\n                <p>\n                    <iframe title=\"Spotify player\" src={\"https://open.spotify.com/embed?uri=\"+post.spotify_uri} width=\"300\" height=\"80\" frameBorder=\"0\" allowTransparency=\"true\" allow=\"encrypted-media\"></iframe>\n                </p>\n                )}\n                {post.youtube_url && (\n                <p className=\"video-container\">\n                    <iframe title=\"YouTube player\" width=\"560\" height=\"315\" src={post.youtube_url} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                </p>\n                )}\n                {post.album && (\n                <p>Album: {post.album}</p>\n                )}\n                <div id=\"post_content\" dangerouslySetInnerHTML={{__html: post.contenidoHTML}} />\n              </div>\n            </div>\n            <div className=\"pagination\">\n              {prevLink}\n              {nextLink}\n            </div>\n          </div>\n        </Layout>\n    );\n}\n\nexport default IndexPage;\n\nexport const query = graphql`\nquery frontPostQuery {\n  allPost(sort: {fields: [fecha_publicacion], order: DESC}, limit:2) {\n    edges {\n      node {\n        album\n        artista\n        titulo\n        contenidoHTML\n        fecha_publicacion(formatString:\"DD MMMM YYYY\")\n        spotify_uri\n        youtube_url\n      }\n      next {\n        slug\n        titulo\n        fecha_publicacion(formatString:\"DD/MM/YY\")\n      }\n      previous {\n        slug\n        titulo\n        fecha_publicacion(formatString:\"DD/MM/YY\")\n      }\n    }\n  }\n}`\n"],"sourceRoot":""}